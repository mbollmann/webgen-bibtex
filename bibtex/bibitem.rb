# -*- encoding: utf-8 -*-

require 'uri'
require_relative 'base'
require_relative 'utils'

module WebgenBibtex
  class Tag
    module BibItem
      extend WebgenBibtex::Tag::Base

      def self.call(tag, _, context)
        bib, proc = make_objects(tag, context)
        id = context[:config]['tag.bibliography.key']
        render = proc.render(:bibliography, id: id)[0]
        render = WebgenBibtex.add_hyperlinks(render, context)

        bibitem = bib[id]
        linklist = make_linklist(bibitem, context)
        if !linklist.nil? then
          render = render_linklist(linklist, bibitem, context, render)
        end

        render
      end

      private

      def self.make_linklist(bibitem, context)
        # Extracts webgen links from a BibTeX item and parses them into a list
        bibentry = find_link(bibitem)
        return if bibentry.nil?
        linklist = Array.new
        # Multiple links should be separated by ||
        entries = bibentry.include?('||') ? bibentry.split("||") : [bibentry]
        entries.each do |entry|
          # Link title and URL should be separated by |
          if entry.include?("|") then
            title, url = entry.split("|")
          else
            title, url = :link, entry
          end
          linklist.push([title.to_sym, WebgenBibtex.resolve_link(url, context)])
        end
        linklist
      end

      def self.find_link(bibitem)
        # Finds a BibTeX entry that represents a link
        if !bibitem[:webgenlink].nil?
          bibitem[:webgenlink]
        elsif !bibitem[:url].nil?
          bibitem[:url]
        elsif !bibitem[:doi].nil?
          "http://dx.doi.org/" + bibitem[:doi]
        else
          nil
        end
      end

      def self.render_linklist(linklist, bibitem, context, render)
        # Augments a rendered bibliography entry with links
        linkstyle = context[:config]['tag.bibliography.link_style']
        if linkstyle == "inline" or linkstyle == "both" then
          url = linklist.shift[1]
          render = add_inline_link(url, bibitem, context, render)
        end
        if linkstyle == "append" or linkstyle == "both" then
          linklist.each do |title,url|
            render += " " + make_appended_link(title, url)
          end
        end
        render
      end

      def self.make_appended_link(title, url)
        # Make a link to add to the end of the bibliography entry
        return "<a href=\"" + url + "\">" +
               "&#91;" + title.to_s + "&#93;" +
               "</a>"
      end

      def self.add_inline_link(url, bibitem, context, render)
        # Adds a link to the bibliography entry's title
        # ---
        # I didn't find any way to mark up the title in the HTML generated by
        # citeproc-ruby, so I'm looking for the title string in the generated
        # output.  This might still break when special characters are involved,
        # we will see.
        begin
          WebgenBibtex.wrap_link(render, url, bibitem[:title].to_s, true)
        rescue WebgenBibtex.StringNotFoundError => e
          context.website.logger.warn [
            "[webgen-bibtex] couldn't find title in bibliography string; inline link not generated",
            "     title was: #{bibitem[:title]}",
            "    render was: #{render}"
          ]
          render
        end
      end
    end
  end
end
