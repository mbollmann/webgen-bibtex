# -*- encoding: utf-8 -*-

require_relative 'base'

module WebgenBibtex
  class Tag
    module BibItem
      extend WebgenBibtex::Tag::Base

      def self.call(tag, _, context)
        bib, proc = make_objects(tag, context)
        id = context[:config]['tag.bibliography.key']
        render = proc.render(:bibliography, id: id)[0]

        bibitem = bib[id]
        if has_link?(bibitem) then
          url = resolve_link(bibitem, context)
          case context[:config]['tag.bibliography.link_style']
          when "inline"
            render = add_inline_link(url, bibitem, render)
          else
            render = add_inline_link(url, bibitem, render)
          end
        end

        render
      end

      private

      def self.has_link?(bibitem)
        !bibitem[:webgenurl].nil?
      end

      def self.resolve_link(bibitem, context)
        url = bibitem[:webgenurl]
        if !url.nil? then
          if url.include?("://") # URL has protocol -- leave unchanged
            ''
          else
            dest_node = context.ref_node.resolve(url.to_s, context.dest_node.lang, true)
            if dest_node
              context.website.ext.item_tracker.add(context.dest_node, :node_meta_info, dest_node)
              url = context.dest_node.route_to(dest_node)
            end
          end
        end
        url
      end

      def self.add_inline_link(url, bibitem, render)
        # I didn't find any way to mark up the title in the HTML generated by
        # citeproc-ruby, so I'm looking for the title string in the generated
        # output.  This might still break when special characters are involved,
        # we will see.
        title = bibitem[:title].to_s.downcase
        title_start = render.downcase.index(title)
        if title_start.nil? then
          puts "WARNING: webgen-bibtex: couldn't find title in bibliography string -- inline link not generated"
          render
        else
          render[0, title_start] +
            "<a href=\"" + url + "\">" +
            render[title_start, title.length] +
            "</a>" +
            render[title_start + title.length, 10000]
        end
      end
    end
  end
end
